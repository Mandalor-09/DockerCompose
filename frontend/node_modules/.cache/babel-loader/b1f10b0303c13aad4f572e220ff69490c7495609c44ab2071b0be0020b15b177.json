{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\LearnDocker\\\\DjanoDocker\\\\frontend\\\\src\\\\components\\\\Todo\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport apiClient from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm({\n  onTodoAdded\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!title.trim()) {\n      setError('Title cannot be empty.');\n      return;\n    }\n    try {\n      const response = await apiClient.post('/todos/', {\n        title,\n        description\n      });\n      setTitle('');\n      setDescription('');\n      onTodoAdded(response.data); // Callback to update the list in parent\n    } catch (err) {\n      var _err$response;\n      console.error('Error adding todo:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError('Failed to add todo.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"eKjj6fEuSL9oO3RZzvsgRvbJY4c=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","apiClient","jsxDEV","_jsxDEV","TodoForm","onTodoAdded","_s","title","setTitle","description","setDescription","error","setError","handleSubmit","e","preventDefault","trim","response","post","data","err","_err$response","console","message","onSubmit","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","color","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/LearnDocker/DjanoDocker/frontend/src/components/Todo/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport apiClient from '../../services/api';\r\n\r\nfunction TodoForm({ onTodoAdded }) {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    if (!title.trim()) {\r\n      setError('Title cannot be empty.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await apiClient.post('/todos/', {\r\n        title,\r\n        description,\r\n      });\r\n      setTitle('');\r\n      setDescription('');\r\n      onTodoAdded(response.data); // Callback to update the list in parent\r\n    } catch (err) {\r\n      console.error('Error adding todo:', err.response?.data || err.message);\r\n      setError('Failed to add todo.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\r\n      <h3>Add New Todo</h3>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <div>\r\n        <label>Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Description (optional):</label>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add Todo</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}